c
session["user_name"]
c
current_user
session["user_name"]
c
session["user_name"]
session["user_name"] = nil
session["user_name"]
current_user
c
session.clear
session
c
step in
c
auth.extra.name
auth.extra
auth.to_hash["extra"]p
auth.to_hash
auth.name
auth
c
@user
n
c
current_user
c
Setting.CUSTOM_PROVIDER_URL
c
current_user
c
request.env['omniauth.auth']
request.env['omniauth.env']
request.env
params
c
jsticket_res["ticket"]
jsticket_res
JSON.parse(jsticket_res)
JSON.parse(jsticket_res)["ticket"]
ticket
c
jsticket_res
ticket
res
c
collector.negotiate_format(request)
n
format.js
format
c
form_for(current_user.relationships.build(followed_id: @user.id)) do |f|c
form_for(current_user.relationships.build(followed_id: @user.id)) do |f|
 f.submit "Follow", class: "btn btn-large btn-primary"
@user
f
c
n
current_user.followingï¼Ÿ(@user)
c
micropost_path
microposts_path
contact_path
signup_path
signin_path
sign_path
session_path
session_url
sessions_path
about_path
edit_user_path
edit_users_path
users_path
user_path
c
edit_user_path
edit_users_path
help_path
edit_user_path
user_path
video_path
index_path
home_path
users_path
index_users_path
index_user_path
help_path
c
cc
c
user
c
cc
c
cc
c
cc
c
cc
c
cc
c
<% end %>c
| <%= link_to "delete", user, method: :delete, data: { confirm: "You sure?" } %>
  <% if current_user.admin? && !current_user?(user) %>
c
current_user
current_users
c
user
use
current_user
c
session[:return_to]
c
@user
c
request.fullpath
c
@user.errors.full_messages
@user.errors.count
@user.errors.any?
@user.errors
@user
c
@title
c
@title
c
@title
title
c
@title
@titke
title
c
title
@title
c
title
c
action
c
action
c
action_name
action
c
@user
controller.methods
controller
controller.name
controller
controler
c
User.find_by(remember_token: User.encrypt(cookies[:remember_token]))
User.encrypt(cookies[:remember_token])
cookies[:remember_token]
User.find(4).remember_token
cookies[:remember_token]
